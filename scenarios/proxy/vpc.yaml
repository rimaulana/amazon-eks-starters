---
AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  Amazon EKS VPC with public and private subnets spreads in 3 different AZs

Parameters:

  ClusterName:
    Type: String
    Description: Give the name of EKS cluster

  PrimaryVpcCidr:
    Type: String
    Default: 10.123.0.0/16
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: Define primary CIDR range for the VPC. This should be a valid private (RFC 1918) CIDR range.

  PublicSubnet01Block:
    Type: String
    Default: 10.123.61.0/24
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: Define the first CIDR block on primary VPC CIDR for public subnet where external load balancer and proxy server will reside

  PublicSubnet02Block:
    Type: String
    Default: 10.123.62.0/24
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: Define the second CIDR block on primary VPC CIDR for public subnet where external load balancer and proxy server will reside

  PublicSubnet03Block:
    Type: String
    Default: 10.123.63.0/24
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: Define the third CIDR block on primary VPC CIDR for public subnet where external load balancer and proxy server will reside

  PrivateSubnet01Block:
    Type: String
    Default: 10.123.64.0/18
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: Define the first CIDR block on primary VPC CIDR for private subnet where internal load balancer, worker node, pod networking and proxy NLB will reside

  PrivateSubnet02Block:
    Type: String
    Default: 10.123.128.0/18
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: Define the second CIDR block on primary VPC CIDR for private subnet where internal load balancer, worker node, pod networking and proxy NLB will reside

  PrivateSubnet03Block:
    Type: String
    Default: 10.123.192.0/18
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: Define the third CIDR block on primary VPC CIDR for private subnet where internal load balancer, worker node, pod networking and proxy NLB will reside
  
  SecondaryVpcCidr:
    Type: String
    Default: 100.64.0.0/16
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: Define secondary CIDR range for the VPC. This should be a valid private (RFC 1918) CIDR range.

  AdditionalSubnet01Block:
    Type: String
    Default: 100.64.0.0/18
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: Define the first CIDR block on secondary VPC CIDR for private subnet for additional pod networking

  AdditionalSubnet02Block:
    Type: String
    Default: 100.64.64.0/18
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: Define the second CIDR block on secondary VPC CIDR for private subnet for additional pod networking

  AdditionalSubnet03Block:
    Type: String
    Default: 100.64.128.0/18
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: Define the third CIDR block on secondary VPC CIDR for private subnet for additional pod networking

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: "EKS Cluster Configurations"
      Parameters:
      - ClusterName

    - Label:
        default: "VPC Configurations"
      Parameters:
      - PrimaryVpcCidr
      - PublicSubnet01Block
      - PublicSubnet02Block
      - PublicSubnet03Block
      - PrivateSubnet01Block
      - PrivateSubnet02Block
      - PrivateSubnet03Block
      - SecondaryVpcCidr
      - AdditionalSubnet01Block
      - AdditionalSubnet02Block
      - AdditionalSubnet03Block

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:  !Ref PrimaryVpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: !Sub '${ClusterName}-on-${AWS::Region}'
      - Key: auto-delete
        Value: "no"
  
  VPCCIDRBlock:
    Type: AWS::EC2::VPCCidrBlock
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref SecondaryVpcCidr

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: auto-delete
        Value: "no"

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub '${ClusterName}-public-route-table-on-${AWS::Region}'
      - Key: Network
        Value: public
      - Key: auto-delete
        Value: "no"
  
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub '${ClusterName}-private-route-table-on-${AWS::Region}'
      - Key: Network
        Value: private
      - Key: auto-delete
        Value: "no"

  PublicRoute:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet01:
    Type: AWS::EC2::Subnet
    Metadata:
      Comment: Public Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs:
            Ref: AWS::Region
      MapPublicIpOnLaunch: true
      CidrBlock:
        Ref: PublicSubnet01Block
      VpcId:
        Ref: VPC
      Tags:
      - Key: kubernetes.io/role/elb
        Value: "1"
      - Key: Name
        Value: 
          Fn::Join:
          - ""
          - - !Sub '${ClusterName}-public-subnet-on-'
            - Fn::Select:
              - 0
              - Fn::GetAZs: !Ref AWS::Region
      - Key: auto-delete
        Value: "no"

  PublicSubnet02:
    Type: AWS::EC2::Subnet
    Metadata:
      Comment: Public Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 1
        - Fn::GetAZs:
            Ref: AWS::Region
      MapPublicIpOnLaunch: true
      CidrBlock:
        Ref: PublicSubnet02Block
      VpcId:
        Ref: VPC
      Tags:
      - Key: kubernetes.io/role/elb
        Value: "1"
      - Key: Name
        Value: 
          Fn::Join:
          - ""
          - - !Sub '${ClusterName}-public-subnet-on-'
            - Fn::Select:
              - 1
              - Fn::GetAZs: !Ref AWS::Region
      - Key: auto-delete
        Value: "no"

  PublicSubnet03:
    Type: AWS::EC2::Subnet
    Metadata:
      Comment: Public Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 2 
        - Fn::GetAZs:
            Ref: AWS::Region
      MapPublicIpOnLaunch: true
      CidrBlock:
        Ref: PublicSubnet03Block
      VpcId:
        Ref: VPC
      Tags:
      - Key: kubernetes.io/role/elb
        Value: "1"
      - Key: Name
        Value: 
          Fn::Join:
          - ""
          - - !Sub '${ClusterName}-public-subnet-on-'
            - Fn::Select:
              - 2
              - Fn::GetAZs: !Ref AWS::Region
      - Key: auto-delete
        Value: "no"

  PrivateSubnet01:
    Type: AWS::EC2::Subnet
    Metadata:
      Comment: Subnet 01
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: PrivateSubnet01Block
      VpcId:
        Ref: VPC
      Tags:
      - Key: kubernetes.io/role/internal-elb
        Value: "1"
      - Key: Name
        Value: 
          Fn::Join:
          - ""
          - - !Sub '${ClusterName}-private-subnet-on-'
            - Fn::Select:
              - 0
              - Fn::GetAZs: !Ref AWS::Region
      - Key: auto-delete
        Value: "no"

  PrivateSubnet02:
    Type: AWS::EC2::Subnet
    Metadata:
      Comment: Subnet 02
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 1
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: PrivateSubnet02Block
      VpcId:
        Ref: VPC
      Tags:
      - Key: kubernetes.io/role/internal-elb
        Value: "1"
      - Key: Name
        Value: 
          Fn::Join:
          - ""
          - - !Sub '${ClusterName}-private-subnet-on-'
            - Fn::Select:
              - 1
              - Fn::GetAZs: !Ref AWS::Region
      - Key: auto-delete
        Value: "no"

  PrivateSubnet03:
    Type: AWS::EC2::Subnet
    Metadata:
      Comment: Subnet 03
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 2
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: PrivateSubnet03Block
      VpcId:
        Ref: VPC
      Tags:
      - Key: kubernetes.io/role/internal-elb
        Value: "1"
      - Key: Name
        Value: 
          Fn::Join:
          - ""
          - - !Sub '${ClusterName}-private-subnet-on-'
            - Fn::Select:
              - 2
              - Fn::GetAZs: !Ref AWS::Region
      - Key: auto-delete
        Value: "no"

  AdditionalPrivateSubnet01:
    Type: AWS::EC2::Subnet
    DependsOn:
    - VPCCIDRBlock
    Metadata:
      Comment: Additional Subnet 01
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: AdditionalSubnet01Block
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: 
          Fn::Join:
          - ""
          - - !Sub '${ClusterName}-additional-subnet-on-'
            - Fn::Select:
              - 0
              - Fn::GetAZs: !Ref AWS::Region
      - Key: auto-delete
        Value: "no"
  
  AdditionalPrivateSubnet02:
    Type: AWS::EC2::Subnet
    DependsOn:
    - VPCCIDRBlock
    Metadata:
      Comment: Additional Subnet 02
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 1
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: AdditionalSubnet02Block
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: 
          Fn::Join:
          - ""
          - - !Sub '${ClusterName}-additional-subnet-on-'
            - Fn::Select:
              - 1
              - Fn::GetAZs: !Ref AWS::Region
      - Key: auto-delete
        Value: "no"

  AdditionalPrivateSubnet03:
    Type: AWS::EC2::Subnet
    DependsOn:
    - VPCCIDRBlock
    Metadata:
      Comment: Additional Subnet 03
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 2
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: AdditionalSubnet03Block
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: 
          Fn::Join:
          - ""
          - - !Sub '${ClusterName}-additional-subnet-on-'
            - Fn::Select:
              - 2
              - Fn::GetAZs: !Ref AWS::Region
      - Key: auto-delete
        Value: "no"

  PublicSubnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet01
      RouteTableId: !Ref PublicRouteTable
    
  PublicSubnet02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet02
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet03RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet03
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet01
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet02
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet03RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet03
      RouteTableId: !Ref PrivateRouteTable

  AdditionalPrivateSubnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref AdditionalPrivateSubnet01
      RouteTableId: !Ref PrivateRouteTable

  AdditionalPrivateSubnet02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref AdditionalPrivateSubnet02
      RouteTableId: !Ref PrivateRouteTable

  AdditionalPrivateSubnet03RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref AdditionalPrivateSubnet03
      RouteTableId: !Ref PrivateRouteTable

  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cluster communication with worker nodes
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub '${ClusterName}-control-plane-sg'
      - Key: auto-delete
        Value: "no"

Outputs:

  EKSSubnetIds:
    Description: >-
      All subnets in the VPC that needs to be defined in EKS cluster creation
    Value: 
      Fn::Join:
      - ","
      - - !Ref PrivateSubnet01
        - !Ref PrivateSubnet02
        - !Ref PrivateSubnet03
        - !Ref PublicSubnet01
        - !Ref PublicSubnet02
        - !Ref PublicSubnet03
  
  PrivateSubnetIds:
    Description: >-
      Collection of private subnet id where worker node will be placed
    Value:
      Fn::Join:
      - ','
      - - !Ref PrivateSubnet01
        - !Ref PrivateSubnet02
        - !Ref PrivateSubnet03

  PublicSubnetIds:
    Description: >-
      Collection of public subnet id where proxy should be depoyed
    Value:
      Fn::Join:
      - ','
      - - !Ref PublicSubnet01
        - !Ref PublicSubnet02
        - !Ref PublicSubnet03

  ContorlPlaneSecurityGroups:
    Description: >-
      Security group for the cluster control plane communication with worker nodes
    Value: !Ref ControlPlaneSecurityGroup

  Id:
    Description: >-
      Exported VPC id for EKS Cluster
    Value: !Ref VPC
