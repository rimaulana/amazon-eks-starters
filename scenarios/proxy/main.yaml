---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Main Stack for EKS with proxy'

Parameters:

  ClusterName:
    Type: String
  
  K8sVersion:
    Type: String
    Default: '11'
    Description: Kubernetes version 1.X
    AllowedValues:
    - '10'
    - '11'

  PrimaryVpcCidr:
    Type: String
    Default: 10.123.0.0/16
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: The CIDR range for the VPC. This should be a valid private (RFC 1918) CIDR range.

  PublicSubnet01Block:
    Type: String
    Default: 10.123.61.0/24
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: CidrBlock for public subnet where external load balancer or bastion host will reside

  PublicSubnet02Block:
    Type: String
    Default: 10.123.62.0/24
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: CidrBlock for public subnet where external load balancer or bastion host will reside

  PublicSubnet03Block:
    Type: String
    Default: 10.123.63.0/24
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: CidrBlock for public subnet where external load balancer or bastion host will reside

  PrivateSubnet01Block:
    Type: String
    Default: 10.123.64.0/18
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: CidrBlock for subnet 01 within the VPC

  PrivateSubnet02Block:
    Type: String
    Default: 10.123.128.0/18
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: CidrBlock for subnet 02 within the VPC

  PrivateSubnet03Block:
    Type: String
    Default: 10.123.192.0/18
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: CidrBlock for subnet 03 within the VPC
  
  SecondaryVpcCidr:
    Type: String
    Default: 100.64.0.0/16
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: Additional VPC CidrBlock

  AdditionalSubnet01Block:
    Type: String
    Default: 100.64.0.0/18
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: CidrBlock for additional subnet 01 within the VPC

  AdditionalSubnet02Block:
    Type: String
    Default: 100.64.64.0/18
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: CidrBlock for additional subnet 02 within the VPC

  AdditionalSubnet03Block:
    Type: String
    Default: 100.64.128.0/18
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: CidrBlock for additional subnet 03 within the VPC
  
  AllowedSshCidr:
    Type: String
    Default: 0.0.0.0/0
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$

  ProxyPort:
    Type: Number
    Default: 3128

  ProxyNumber:
    Type: Number
    Default: 3

  ProxyInstanceType:
    Type: String
    Default: t2.nano
    AllowedValues: 
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
  
  ProxyAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  
  KeyName:
    Type: String
    Default: rmaulan-testbed
  
  NodeGPUSupport:
    Type: String
    Description: GPU support on worker nodes
    Default: nogpu
    AllowedValues:
    - nogpu
    - gpu

  NodeInstanceType:
    Description: EC2 instance type for the node instances
    Type: String
    Default: t2.medium
    AllowedValues:
    - t2.small
    - t2.medium
    - t2.large
    - t2.xlarge
    - t2.2xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m5.large
    - m5.xlarge
    - m5.2xlarge
    - m5.4xlarge
    - m5.12xlarge
    - m5.24xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - c5.large
    - c5.xlarge
    - c5.2xlarge
    - c5.4xlarge
    - c5.9xlarge
    - c5.18xlarge
    - i3.large
    - i3.xlarge
    - i3.2xlarge
    - i3.4xlarge
    - i3.8xlarge
    - i3.16xlarge
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - r4.large
    - r4.xlarge
    - r4.2xlarge
    - r4.4xlarge
    - r4.8xlarge
    - r4.16xlarge
    - x1.16xlarge
    - x1.32xlarge
    - p2.xlarge
    - p2.8xlarge
    - p2.16xlarge
    - p3.2xlarge
    - p3.8xlarge
    - p3.16xlarge
    ConstraintDescription: Must be a valid EC2 instance type

  NodeAutoScalingGroupMinSize:
    Type: Number
    Description: Minimum size of Node Group ASG.
    Default: 1

  NodeAutoScalingGroupMaxSize:
    Type: Number
    Description: Maximum size of Node Group ASG.
    Default: 100 

  NodeVolumeSize:
    Type: Number
    Description: Node volume size
    Default: 20
  
  BootstrapArguments:
    Description: Arguments to pass to the bootstrap script. See files/bootstrap.sh in https://github.com/awslabs/amazon-eks-ami
    Default: ""
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: "EKS Cluster Configuration"
      Parameters:
      - ClusterName
      - K8sVersion

    - Label:
        default: "Proxy Configuration"
      Parameters:
      - ProxyAmiId
      - ProxyInstanceType
      - ProxyNumber
      - ProxyPort

    - Label:
        default: "VPC Configuration"
      Parameters:
      - ClusterName
      - PrimaryVpcCidr
      - PublicSubnet01Block
      - PublicSubnet02Block
      - PublicSubnet03Block
      - PrivateSubnet01Block
      - PrivateSubnet02Block
      - PrivateSubnet03Block
      - SecondaryVpcCidr
      - AdditionalSubnet01Block
      - AdditionalSubnet02Block
      - AdditionalSubnet03Block

    - Label:
        default: 'Worker Node Configuration'
      Parameters:
      - NodeAutoScalingGroupMinSize
      - NodeAutoScalingGroupMaxSize
      - NodeInstanceType
      - NodeGPUSupport
      - NodeVolumeSize
      - BootstrapArguments

    - Label:
        default: "Accessibility"
      Parameters:
      - AllowedSshCidr
      - KeyName

Resources:
  Vpc:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./vpc.yaml
      Parameters:
        ClusterName: !Ref ClusterName
        PrimaryVpcCidr: !Ref PrimaryVpcCidr
        SecondaryVpcCidr: !Ref SecondaryVpcCidr
        PublicSubnet01Block: !Ref PublicSubnet01Block
        PublicSubnet02Block: !Ref PublicSubnet02Block
        PublicSubnet03Block: !Ref PublicSubnet03Block
        PrivateSubnet01Block: !Ref PrivateSubnet01Block
        PrivateSubnet02Block: !Ref PrivateSubnet02Block
        PrivateSubnet03Block: !Ref PrivateSubnet03Block
        AdditionalSubnet01Block: !Ref AdditionalSubnet01Block
        AdditionalSubnet02Block: !Ref AdditionalSubnet02Block
        AdditionalSubnet03Block: !Ref AdditionalSubnet03Block
  
  Proxy:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./proxy.yaml
      Parameters:
        ClusterName: !Ref ClusterName
        VpcId: 
          Fn::GetAtt:
          - Vpc
          - Outputs.Id
        PrimaryVpcCidr: !Ref PrimaryVpcCidr
        SecondaryVpcCidr: !Ref SecondaryVpcCidr
        AllowedSshCidr: !Ref AllowedSshCidr
        PublicSubnets: 
          Fn::GetAtt:
          - Vpc
          - Outputs.PublicSubnetIds
        PrivateSubnets: 
          Fn::GetAtt:
          - Vpc
          - Outputs.PrivateSubnetIds
        KeyName: !Ref KeyName
        ProxyPort: !Ref ProxyPort
        ProxyNumber: !Ref ProxyNumber
        ProxyInstanceType: !Ref ProxyInstanceType
        ProxyImageId: !Ref ProxyAmiId
  
  WorkerNodes:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - EKSCluster
    Properties:
      TemplateURL: ./worker.yaml
      Parameters:
        ClusterName: !Ref ClusterName
        ClusterControlPlaneSecurityGroup:
          Fn::GetAtt:
          - Vpc
          - Outputs.ContorlPlaneSecurityGroups
        K8sVersion: !Ref K8sVersion
        VpcId:
          Fn::GetAtt:
          - Vpc
          - Outputs.Id
        PrivateSubnets:
          Fn::GetAtt:
          - Vpc
          - Outputs.PrivateSubnetIds
        ClusterCidr:
          Fn::Join:
            - ','
            - - !Ref PrimaryVpcCidr
              - !Ref SecondaryVpcCidr
        ProxyUrl:
          Fn::GetAtt:
          - Proxy
          - Outputs.ProxyAddr
        ProxyPort: !Ref ProxyPort
        ProxySecurityGroup:
          Fn::GetAtt:
          - Proxy
          - Outputs.ProxySecurityGroup
        NodeAutoScalingGroupMinSize: !Ref NodeAutoScalingGroupMinSize
        NodeAutoScalingGroupMaxSize: !Ref NodeAutoScalingGroupMaxSize
        NodeInstanceType: !Ref NodeInstanceType
        NodeGPUSupport: !Ref NodeGPUSupport
        NodeVolumeSize: !Ref NodeVolumeSize
        KeyName: !Ref KeyName
        BootstrapArguments: !Ref BootstrapArguments

  EKSServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - eks.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
      - arn:aws:iam::aws:policy/AmazonEKSServicePolicy

  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Ref ClusterName
      RoleArn: !GetAtt EKSServiceRole.Arn
      Version:
        Fn::Join:
        - '.'
        - - '1'
          - !Ref K8sVersion
      ResourcesVpcConfig:
        SecurityGroupIds:
        - Fn::GetAtt:
          - Vpc
          - Outputs.ContorlPlaneSecurityGroups
        SubnetIds: 
          Fn::Split:
          - ','
          - Fn::GetAtt:
            - Vpc
            - Outputs.EKSSubnetIds
      