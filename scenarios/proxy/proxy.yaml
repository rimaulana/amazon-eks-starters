---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Amazon EKS - Proxy infrastructure'

Parameters:
  VPCInput:
    Type: AWS::EC2::VPC::Id
  PrimaryCIDR:
    Type: String
    Default: 10.123.0.0/16
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
  SecondaryCIDR:
    Type: String
    Default: 100.64.0.0/16
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
  AllowedCIDR:
    Type: String
    Default: 0.0.0.0/0
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
  PublicSubnets:
    Type: List<AWS::EC2::Subnet::Id>
  PrivateSubnets:
    Type: List<AWS::EC2::Subnet::Id>
  KeyName:
    Type: String
    Default: rmaulan-testbed

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow traffic from internal VPC to access proxy servers
      VpcId: !Ref VPCInput
      SecurityGroupIngress:
      - CidrIp: !Ref PrimaryCIDR
        Description: Allow internal traffic to port 3128 from primary CIDR
        FromPort: 3128
        ToPort: 3128
        IpProtocol: TCP
      - CidrIp: !Ref SecondaryCIDR
        Description: Allow internal traffic to port 3128 from secondary CIDR
        FromPort: 3128
        ToPort: 3128
        IpProtocol: TCP
      - CidrIp: !Ref AllowedCIDR
        Description: Allow SSH access from allowed CIDR range
        FromPort: 22
        ToPort: 22
        IpProtocol: TCP
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: '-1'
        Description: Default allow all outbound connection
      Tags:
      - Key: Name
        Value: proxy-security-group

  ProxyASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: '3'
      LaunchConfigurationName: !Ref ProxyLaunchConfig
      TargetGroupARNs:
      - !Ref ProxyTargetGroup
      MinSize: '3'
      MaxSize: '6'
      VPCZoneIdentifier: !Ref PublicSubnets
      Tags:
      - Key: Name
        Value: "proxy-asg"
        PropagateAtLaunch: true
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT10M
    
  NetworkLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internal
      Subnets: !Ref PrivateSubnets
      Type: network
  
  ProxyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 3128
      Protocol: TCP
      TargetType: instance
      VpcId: !Ref VPCInput
  
  NLBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref NetworkLoadBalancer
      Port: 3128
      Protocol: TCP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ProxyTargetGroup
  
  ProxyLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          install:
          - enable_epel
          - install
        enable_epel:
          commands:
            01_enable_epel:
              command: yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
        install:
          packages:
            yum:
              tinyproxy: []
          files:
            /home/ec2-user/update-config.sh:
              content: !Sub |
                #!/bin/bash
                sed -i 's/^Port 8888/Port 3128/' /etc/tinyproxy/tinyproxy.conf
                echo "Allow ${PrimaryCIDR}" >> /etc/tinyproxy/tinyproxy.conf
                echo "Allow ${SecondaryCIDR}" >> /etc/tinyproxy/tinyproxy.conf
              mode: '000744'
              owner: root
              group: root
          commands:
            01_update_config:
              command: /bin/bash /home/ec2-user/update-config.sh
            02_remove_updater:
              command: rm /home/ec2-user/update-config.sh
          services:
            sysvinit:
              tinyproxy:
                enabled: true
                ensureRunning: true 
    Properties:
      AssociatePublicIpAddress: true
      ImageId: ami-02da3a138888ced85 
      InstanceType: t2.nano
      KeyName: !Ref KeyName
      SecurityGroups:
      - !Ref SecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 8
            VolumeType: gp2
            DeleteOnTermination: true
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            set -o xtrace
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource ProxyLaunchConfig --configsets install --region ${AWS::Region}
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource ProxyASG --region ${AWS::Region}
            
      
